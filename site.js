/js/site.js
<script>
// ======================= –ó–ê–ì–†–£–ó–ö–ê PARTIALS –ò–ó index.html =======================
async function loadFromIndex(selector, targetId) {
try {
    const resp = await fetch('index.html', { cache: 'no-cache' });
    const text = await resp.text();
    const doc  = new DOMParser().parseFromString(text, 'text/html');
    const part = doc.querySelector(selector);
    const target = document.getElementById(targetId);
    if (part && target) target.innerHTML = part.outerHTML;
} catch (err) {
    console.error('[site.js] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ index.html:', err);
}
}

// ======================= –Ø–ó–´–ö: –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø =============================
window.setLanguage = window.setLanguage || function setLanguage(lang) {
  // 1) —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä
localStorage.setItem('vilana_lang', lang);

  // 2) –∫–ª–∞—Å—Å—ã –Ω–∞ <html> (–µ—Å–ª–∏ –∫–æ–≥–¥–∞-—Ç–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –¥–ª—è CSS)
document.documentElement.classList.toggle('lang-de', lang === 'de');
document.documentElement.classList.toggle('lang-ru', lang === 'ru');

  // 3) —Å–∫—Ä—ã—Ç—å –≤—Å—ë .lang –∏ –ø–æ–∫–∞–∑–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –Ω—É–∂–Ω–æ–≥–æ —è–∑—ã–∫–∞
document.querySelectorAll('.lang').forEach(el => el.style.display = 'none');

const blockTags = new Set(['H1','H2','H3','H4','H5','H6','P','DIV','LI','UL','OL','SECTION','ARTICLE','FOOTER','HEADER']);
document.querySelectorAll('.lang-' + lang).forEach(el => {
    const hint = el.getAttribute('data-disp');
    el.style.display = hint ? hint : (blockTags.has(el.tagName) ? 'block' : 'inline');
});

  // 4) –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ (—Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Å data-lang, –∏ —Å inline onclick)
document.querySelectorAll('[data-lang], [onclick^="setLanguage"]').forEach(btn => {
    const isActive = btn.getAttribute('data-lang') === lang ||
                    (btn.getAttribute('onclick') || '').includes("'" + lang + "'");
    btn.classList.toggle('ring-2', isActive);
    btn.classList.toggle('ring-amber-500', isActive);
});
};

// ======================= –î–û–ë–ê–í–ò–¢–¨ –ù–ï–î–û–°–¢–ê–Æ–©–ò–ï –ö–ù–û–ü–ö–ò –Ø–ó–´–ö–ê ====================
function ensureLangButtons() {
  // Desktop-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ñ–ª–∞–≥–∞–º–∏ (–∏—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π)
let desktopLangBox = document.querySelector('header .hidden.md\\:flex.gap-2');

  // –ï—Å–ª–∏ –≤ —à–∞–ø–∫–µ –µ–≥–æ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º
if (!desktopLangBox) {
    const headerContainer = document.querySelector('header .container');
    if (headerContainer) {
    desktopLangBox = document.createElement('div');
    desktopLangBox.className = 'hidden md:flex gap-2';
    headerContainer.appendChild(desktopLangBox);
    }
}

  // –î–æ–±–∞–≤–∏—Ç—å üá©üá™
if (desktopLangBox && !desktopLangBox.querySelector('[data-lang="de"],[onclick*="setLanguage(\'de\')"]')) {
    const deBtn = document.createElement('button');
    deBtn.type = 'button';
    deBtn.setAttribute('data-lang', 'de');
    deBtn.className = 'px-2';
    deBtn.textContent = 'üá©üá™';
    desktopLangBox.appendChild(deBtn);
}

  // –î–æ–±–∞–≤–∏—Ç—å üá∑üá∫
if (desktopLangBox && !desktopLangBox.querySelector('[data-lang="ru"],[onclick*="setLanguage(\'ru\')"]')) {
    const ruBtn = document.createElement('button');
    ruBtn.type = 'button';
    ruBtn.setAttribute('data-lang', 'ru');
    ruBtn.className = 'px-2';
    ruBtn.textContent = 'üá∑üá∫';
    desktopLangBox.appendChild(ruBtn);
}

  // Mobile: –¥–æ–±–∞–≤–∏—Ç—å —Ä—è–¥ —è–∑—ã–∫–æ–≤, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
const mobileMenu = document.getElementById('mobileMenu');
if (mobileMenu && !mobileMenu.querySelector('.lang-row')) {
    const row = document.createElement('div');
    row.className = 'lang-row flex gap-3 items-center pt-2';
    row.innerHTML = `
    <button type="button" data-lang="de" class="px-2">üá©üá™</button>
    <button type="button" data-lang="ru" class="px-2">üá∑üá∫</button>
    `;
    mobileMenu.prepend(row);
}
}

// ======================= –ë–£–†–ì–ï–†-–ú–ï–ù–Æ ==========================================
function initHeaderInteractions() {
const toggleBtn  = document.getElementById('menuToggle');
const mobileMenu = document.getElementById('mobileMenu');
if (toggleBtn && mobileMenu) {
    toggleBtn.addEventListener('click', () => mobileMenu.classList.toggle('hidden'));
}
}

// ======================= EVENT-–°–°–´–õ–ö–ê –° UTM –ò –Ø–ó–´–ö–û–ú ==========================
(function(){
const EVENT_ID = 'russian-oktoberfest-2025';

function copyTrackingParams(fromURL, toURL) {
    const keep = ['utm_source','utm_medium','utm_campaign','utm_term','utm_content','gclid','fbclid'];
    keep.forEach(k => {
    const v = fromURL.searchParams.get(k);
    if (v) toURL.searchParams.set(k, v);
    });
}

window.setEventLinks = function setEventLinks() {
    const url  = new URL(location.href);
    const lang = (url.searchParams.get('lang') || localStorage.getItem('vilana_lang') || 'de').toLowerCase();

    const ev = new URL('event.html', url);
    ev.searchParams.set('id', EVENT_ID);
    ev.searchParams.set('lang', lang);
    copyTrackingParams(url, ev);

    const selectors = '#eventLink, #eventLinkMobile, #eventLinkFooter, a[data-ev-link]';
    document.querySelectorAll(selectors).forEach(a => { a.href = ev.href; });
};
})();

// ======================= EmailJS (–µ—Å–ª–∏ —Ñ–æ—Ä–º–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç) ======================
function initEmailJSIfPresent() {
  // –ï—Å–ª–∏ emailjs –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º
if (typeof emailjs === 'undefined') return;

try { emailjs.init('vfmomNKrMxrf2xqDW'); } catch (e) {}

const form = document.getElementById('contactForm');
if (!form) return;

form.addEventListener('submit', function(e) {
    e.preventDefault();
    if (form.honeypot && form.honeypot.value !== '') return; // –∞–Ω—Ç–∏—Å–ø–∞–º
    emailjs.sendForm('service_75biswm', 'template_fuxgrlb', form)
    .then(() => {
        const msg = document.getElementById('formMsg');
        if (msg) msg.classList.remove('hidden');
        form.reset();
    }, (error) => {
        alert('Fehler beim Senden: ' + (error?.text || 'Unbekannter Fehler'));
    });
});
}

// ======================= –î–ï–õ–ï–ì–ê–¢–û–† –ö–õ–ò–ö–û–í –ü–û [data-lang] ======================
function attachLangDelegator() {
  // –û–¥–∏–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫, –ø–æ—è–≤–∏–≤—à–∏—Ö—Å—è –ø–æ–∑–∂–µ
document.addEventListener('click', (e) => {
    const btn = e.target.closest('[data-lang]');
    if (!btn) return;
    window.setLanguage(btn.getAttribute('data-lang'));
});
}

// ======================= BOOT (—Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞) ==================================
document.addEventListener('DOMContentLoaded', async () => {
  // 1) –ü–æ–¥—Å—Ç–∞–≤–∏—Ç—å —à–∞–ø–∫—É/—Ñ—É—Ç–µ—Ä –∏–∑ index.html
await loadFromIndex('header', 'site-header');
await loadFromIndex('footer', 'site-footer');

  // 2) –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —à–∞–ø–∫–∏
  ensureLangButtons();        // –¥–æ–±–∞–≤–∏—Ç RU/DE, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
  initHeaderInteractions();   // –±—É—Ä–≥–µ—Ä

  // 3) –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–ª–µ–≥–∞—Ç–æ—Ä –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
attachLangDelegator();

  // 4) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —è–∑—ã–∫: ?lang=‚Ä¶ > localStorage > de
const url = new URL(location.href);
const urlLang = (url.searchParams.get('lang') || '').toLowerCase();
const saved   = (localStorage.getItem('vilana_lang') || '').toLowerCase();
window.setLanguage(urlLang || saved || 'de');

  // 5) –ü—Ä–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
window.setEventLinks();

  // 6) –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ä–º–∞ –∏ –ø–æ–¥–∫–ª—é—á—ë–Ω emailjs ‚Äî –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
initEmailJSIfPresent();
});